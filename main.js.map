{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dishes.component.ts","webpack:///./src/app/dishes.manage.component.html","webpack:///./src/app/dishes.manage.component.ts","webpack:///./src/app/home.component.ts","webpack:///./src/app/nav.component.ts","webpack:///./src/app/web.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component} from '@angular/core';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <nav></nav>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class AppComponent  {}\r\n","import { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCardModule, MatInputModule, MatSnackBarModule, MatToolbarModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { DishesComponent } from './dishes.component';\nimport { AppComponent } from './app.component';\nimport { WebService } from './web.service';\nimport { NavComponent } from './nav.component';\nimport { HomeComponent } from './home.component';\nimport { ManageDishComponent } from './dishes.manage.component';\n\n\nvar routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'dishes',\n    component: DishesComponent\n  },\n  {\n    path: 'dishes/:id',\n    component: DishesComponent\n  },\n  {\n    path: 'manage',\n    component: ManageDishComponent\n  },\n  {\n    path: 'manage/:id',\n    component: ManageDishComponent\n  }];\n\n\n\n@NgModule({\n  imports: [BrowserModule, HttpModule, FormsModule, ReactiveFormsModule, RouterModule.forRoot(routes), BrowserAnimationsModule, MatButtonModule, MatCardModule, MatInputModule, MatSnackBarModule, MatToolbarModule],\n  declarations: [AppComponent, DishesComponent, ManageDishComponent, NavComponent, HomeComponent],\n  bootstrap: [AppComponent],\n  providers: [WebService]\n})\nexport class AppModule { }","import { Component } from '@angular/core';\r\nimport { WebService } from './web.service'\r\nimport { ActivatedRoute } from '@angular/router'\r\n\r\n@Component({\r\n    selector: 'dishes',\r\n    template: `\r\n    <div *ngFor=\"let dish of webService.dishes | async\">\r\n        <mat-card class=\"card\">\r\n            <mat-card-title [routerLink]=\"['/dishes', dish.id]\"  style=\"cursor: pointer\">{{dish.id}}</mat-card-title>\r\n            <mat-card-content>{{dish.name}}</mat-card-content>\r\n            <mat-card-content>{{dish.type}}</mat-card-content>\r\n            <mat-card-content>{{dish.category}}</mat-card-content>\r\n            <mat-card-content>{{dish.description}}</mat-card-content>\r\n            <button (click)=\"delete(dish)\" mat-raised-button color=\"warn\">Delete</button>\r\n            <button [routerLink]=\"['/manage', dish.id]\"  mat-raised-button color=\"primary\">Update</button>\r\n            <button [routerLink]=\"['/manage', dish.id]\"  mat-raised-button color=\"primary\">View Details</button>\r\n        </mat-card>\r\n    </div>\r\n    \r\n    `\r\n})\r\nexport class DishesComponent{\r\n\r\n    constructor( private webService: WebService,\r\n                private route: ActivatedRoute\r\n        ){}\r\n\r\n        ngOnInit(){\r\n           //var id = this.route.snapshot.params.id;\r\n           this.webService.getDishes();\r\n        }\r\n\r\n        delete(dish){\r\n            this.webService.deleteDish(dish);\r\n        }\r\n}","module.exports = \"<mat-card>\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <mat-form-field>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('name')}\\\" matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('type')}\\\" matInput placeholder=\\\"Type\\\" formControlName=\\\"type\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <input style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('category')}\\\" matInput placeholder=\\\"Category\\\" formControlName=\\\"category\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <textarea  style=\\\"width:350px\\\" [ngClass]=\\\"{'error': isValid('description')}\\\" matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <button mat-raised-button ng-show=\\\"dish.id ==''\\\" class=\\\"ng-hide\\\" color=\\\"primary\\\">Create Dish</button>\\r\\n        <button mat-raised-button ng-show=\\\"dish.id !=''\\\" class=\\\"ng-hide\\\" color=\\\"primary\\\">Update Dish</button>\\r\\n\\r\\n    </form>\\r\\n</mat-card>\"","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { WebService } from './web.service'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { DishesComponent } from './dishes.component';\r\n\r\n@Component({\r\n  //  moduleId: module.id,\r\n    selector: 'manage',\r\n    templateUrl: 'dishes.manage.component.html',\r\n    styles: [`\r\n        .error {\r\n            background-color: #fff0f0\r\n        }\r\n    `]\r\n})\r\nexport class ManageDishComponent {\r\n    form;\r\n    dish = {\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        id: \"\"\r\n    }\r\n\r\n    constructor(private fb: FormBuilder, \r\n        private webService: WebService,\r\n        private route: ActivatedRoute) {\r\n\r\n        this.form = fb.group({\r\n            name: [this.dish.name, Validators.required],\r\n            type: [this.dish.type, Validators.required],\r\n            category: [this.dish.category, Validators.required],\r\n            description: [this.dish.description, Validators.required]\r\n            })\r\n    }\r\n\r\n    ngOnInit(){\r\n        var id = this.route.snapshot.params.id;\r\n        console.log(\"ppppp id \" + id);\r\n\r\n        this.webService.getDishesById(id);\r\n        console.log(\"ppppp this.webService.singleDish.name \" + this.webService.singleDish.name);\r\n        if(this.webService.singleDish != null){\r\n            this.dish = this.webService.singleDish;\r\n            this.form = this.fb.group({\r\n                name: [this.dish.name, Validators.required],\r\n                type: [this.dish.type, Validators.required],\r\n                category: [this.dish.category, Validators.required],\r\n                description: [this.dish.description, Validators.required]\r\n                }) \r\n        }\r\n     }\r\n\r\n    onSubmit() {\r\n        this.dish.name = this.form.value.name;\r\n        this.dish.type = this.form.value.type;\r\n        this.dish.category = this.form.value.category;\r\n        this.dish.description = this.form.value.description;\r\n\r\n        this.webService.postDish(this.dish);\r\n    }\r\n\r\n    isValid(control) {\r\n        return this.form.controls[control].invalid && this.form.controls[control].touched\r\n    }\r\n}\r\n","import { Component} from '@angular/core';\r\nimport { DishesComponent } from './dishes.component';\r\nimport { NavComponent } from './nav.component';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  template: `\r\n    <dishes></dishes>\r\n  `,\r\n})\r\nexport class HomeComponent  {}\r\n","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'nav',\r\n    template: `\r\n        <mat-toolbar color=\"primary\">\r\n            <button mat-button routerLink=\"/\" >Dishes</button>\r\n            <button mat-button routerLink=\"/dishes\" >Messages</button>\r\n            <button mat-button routerLink=\"/manage\" >Manage Dish</button>\r\n\r\n            </mat-toolbar>\r\n    `\r\n})\r\nexport class NavComponent {\r\n    constructor() {}\r\n}","import { Http } from '@angular/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Subject } from 'rxjs/Rx'\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Injectable()\r\nexport class WebService {\r\n   // BASE_URL = 'http://localhost:8090';\r\n   BASE_URL = 'https://appdishes.herokuapp.com';\r\n    private dishesStore = [];\r\n\r\n    singleDish;\r\n    private dishSubjet = new Subject();\r\n\r\n    dishes = this.dishSubjet.asObservable();\r\n\r\n    constructor(private http: Http, private sb: MatSnackBar) {\r\n        this.getDishes();\r\n    }\r\n\r\n\r\n     getDishes(){\r\n\r\n        this.http.get(this.BASE_URL + '/dishes').subscribe(response =>{\r\n                this.dishesStore = response.json();\r\n                this.dishSubjet.next(this.dishesStore);\r\n        }, error => {\r\n            this.handleError(\"Unable to get dishes\");\r\n        });\r\n    }\r\n\r\n    getDishesById(id){\r\n        this.http.get(this.BASE_URL + '/dishes'+'/' + id).subscribe(response =>{\r\n               // this.dishesStore = response.json();\r\n              //  this.dishSubjet.next(this.dishesStore);\r\n              //  if(id != null){\r\n                    this.singleDish = response.json()[0];\r\n                    console.log(\"4445 id \" + id);\r\n\r\n                    console.log(\"4445 response.json()[0] \" + response.json()[0].name);\r\n                    console.log(\"4445 this.singleDish.name \" + this.singleDish.name);\r\n               // }\r\n        }, error => {\r\n            this.handleError(\"Unable to get dishes\");\r\n        });\r\n    }\r\n\r\n\r\n    async postDish(dish){\r\n        try{\r\n            var response = await this.http.post(this.BASE_URL + '/dishes', dish).toPromise();\r\n            this.informCreated(\"dish \" + response.json().name +\" was created!\");\r\n        }catch(error){\r\n            this.handleError(\"Unable to post dish\");\r\n        }\r\n     }\r\n\r\n    deleteDish(dish){\r\n        if (confirm(\"Are you sure you wish to delete Lease ' \" + dish.name + \" '\")) {\r\n            this.http.delete(this.BASE_URL + '/dishes'+\"/\"+ dish.id).finally(()=> {this.dishSubjet;})\r\n                .subscribe(\r\n                res => {\r\n                    this.alert(\"Dish Has been Deleted\");\r\n                },\r\n                err => {\r\n                    this.handleError(\"Unable to delete dish\");\r\n                } ) \r\n }\r\n}\r\n\r\n    private handleError(error) {\r\n        console.error(error);\r\n        this.sb.open(error, 'close', { duration: 2000 });\r\n    }\r\n\r\n     private alert(message){\r\n        console.log(message);\r\n        this.sb.open(message, 'close', {duration: 2000});\r\n     }\r\n\r\n     private informCreated(message){\r\n        this.sb.open(message, 'close', {duration: 2000});\r\n     }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}